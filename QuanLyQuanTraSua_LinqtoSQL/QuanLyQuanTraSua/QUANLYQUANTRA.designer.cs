#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QuanLyQuanTraSua
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QUANLYTRASUA")]
	public partial class QUANLYQUANTRADataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBANGLUONG(BANGLUONG instance);
    partial void UpdateBANGLUONG(BANGLUONG instance);
    partial void DeleteBANGLUONG(BANGLUONG instance);
    partial void InsertCALAM(CALAM instance);
    partial void UpdateCALAM(CALAM instance);
    partial void DeleteCALAM(CALAM instance);
    partial void InsertCHI(CHI instance);
    partial void UpdateCHI(CHI instance);
    partial void DeleteCHI(CHI instance);
    partial void InsertCHITIETHOADON(CHITIETHOADON instance);
    partial void UpdateCHITIETHOADON(CHITIETHOADON instance);
    partial void DeleteCHITIETHOADON(CHITIETHOADON instance);
    partial void InsertCOUPON(COUPON instance);
    partial void UpdateCOUPON(COUPON instance);
    partial void DeleteCOUPON(COUPON instance);
    partial void InsertDANGNHAP(DANGNHAP instance);
    partial void UpdateDANGNHAP(DANGNHAP instance);
    partial void DeleteDANGNHAP(DANGNHAP instance);
    partial void InsertDANGNHAP2(DANGNHAP2 instance);
    partial void UpdateDANGNHAP2(DANGNHAP2 instance);
    partial void DeleteDANGNHAP2(DANGNHAP2 instance);
    partial void InsertDOANHTHU(DOANHTHU instance);
    partial void UpdateDOANHTHU(DOANHTHU instance);
    partial void DeleteDOANHTHU(DOANHTHU instance);
    partial void InsertHOADON(HOADON instance);
    partial void UpdateHOADON(HOADON instance);
    partial void DeleteHOADON(HOADON instance);
    partial void InsertKHACHHANG(KHACHHANG instance);
    partial void UpdateKHACHHANG(KHACHHANG instance);
    partial void DeleteKHACHHANG(KHACHHANG instance);
    partial void InsertMENU(MENU instance);
    partial void UpdateMENU(MENU instance);
    partial void DeleteMENU(MENU instance);
    partial void InsertLOINHUAN(LOINHUAN instance);
    partial void UpdateLOINHUAN(LOINHUAN instance);
    partial void DeleteLOINHUAN(LOINHUAN instance);
    partial void InsertNHANVIEN(NHANVIEN instance);
    partial void UpdateNHANVIEN(NHANVIEN instance);
    partial void DeleteNHANVIEN(NHANVIEN instance);
    partial void InsertQUANLY(QUANLY instance);
    partial void UpdateQUANLY(QUANLY instance);
    partial void DeleteQUANLY(QUANLY instance);
    partial void InsertQUANLYLUONG(QUANLYLUONG instance);
    partial void UpdateQUANLYLUONG(QUANLYLUONG instance);
    partial void DeleteQUANLYLUONG(QUANLYLUONG instance);
    #endregion
		
		public QUANLYQUANTRADataContext() : 
				base(global::QuanLyQuanTraSua.Properties.Settings.Default.QUANLYTRASUAConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public QUANLYQUANTRADataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QUANLYQUANTRADataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QUANLYQUANTRADataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QUANLYQUANTRADataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<BANGLUONG> BANGLUONGs
		{
			get
			{
				return this.GetTable<BANGLUONG>();
			}
		}
		
		public System.Data.Linq.Table<CALAM> CALAMs
		{
			get
			{
				return this.GetTable<CALAM>();
			}
		}
		
		public System.Data.Linq.Table<CHI> CHIs
		{
			get
			{
				return this.GetTable<CHI>();
			}
		}
		
		public System.Data.Linq.Table<CHITIETHOADON> CHITIETHOADONs
		{
			get
			{
				return this.GetTable<CHITIETHOADON>();
			}
		}
		
		public System.Data.Linq.Table<COUPON> COUPONs
		{
			get
			{
				return this.GetTable<COUPON>();
			}
		}
		
		public System.Data.Linq.Table<DANGNHAP> DANGNHAPs
		{
			get
			{
				return this.GetTable<DANGNHAP>();
			}
		}
		
		public System.Data.Linq.Table<DANGNHAP2> DANGNHAP2s
		{
			get
			{
				return this.GetTable<DANGNHAP2>();
			}
		}
		
		public System.Data.Linq.Table<DOANHTHU> DOANHTHUs
		{
			get
			{
				return this.GetTable<DOANHTHU>();
			}
		}
		
		public System.Data.Linq.Table<HOADON> HOADONs
		{
			get
			{
				return this.GetTable<HOADON>();
			}
		}
		
		public System.Data.Linq.Table<KHACHHANG> KHACHHANGs
		{
			get
			{
				return this.GetTable<KHACHHANG>();
			}
		}
		
		public System.Data.Linq.Table<MENU> MENUs
		{
			get
			{
				return this.GetTable<MENU>();
			}
		}
		
		public System.Data.Linq.Table<LOINHUAN> LOINHUANs
		{
			get
			{
				return this.GetTable<LOINHUAN>();
			}
		}
		
		public System.Data.Linq.Table<NHANVIEN> NHANVIENs
		{
			get
			{
				return this.GetTable<NHANVIEN>();
			}
		}
		
		public System.Data.Linq.Table<QUANLY> QUANLies
		{
			get
			{
				return this.GetTable<QUANLY>();
			}
		}
		
		public System.Data.Linq.Table<QUANLYLUONG> QUANLYLUONGs
		{
			get
			{
				return this.GetTable<QUANLYLUONG>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BANGLUONG")]
	public partial class BANGLUONG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Nam;
		
		private int _Thang;
		
		private string _MaNV;
		
		private System.Nullable<float> _TienLuong;
		
		private EntityRef<NHANVIEN> _NHANVIEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNamChanging(int value);
    partial void OnNamChanged();
    partial void OnThangChanging(int value);
    partial void OnThangChanged();
    partial void OnMaNVChanging(string value);
    partial void OnMaNVChanged();
    partial void OnTienLuongChanging(System.Nullable<float> value);
    partial void OnTienLuongChanged();
    #endregion
		
		public BANGLUONG()
		{
			this._NHANVIEN = default(EntityRef<NHANVIEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nam", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Nam
		{
			get
			{
				return this._Nam;
			}
			set
			{
				if ((this._Nam != value))
				{
					this.OnNamChanging(value);
					this.SendPropertyChanging();
					this._Nam = value;
					this.SendPropertyChanged("Nam");
					this.OnNamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Thang", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Thang
		{
			get
			{
				return this._Thang;
			}
			set
			{
				if ((this._Thang != value))
				{
					this.OnThangChanging(value);
					this.SendPropertyChanging();
					this._Thang = value;
					this.SendPropertyChanged("Thang");
					this.OnThangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNV", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaNV
		{
			get
			{
				return this._MaNV;
			}
			set
			{
				if ((this._MaNV != value))
				{
					if (this._NHANVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNVChanging(value);
					this.SendPropertyChanging();
					this._MaNV = value;
					this.SendPropertyChanged("MaNV");
					this.OnMaNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TienLuong", DbType="Real")]
		public System.Nullable<float> TienLuong
		{
			get
			{
				return this._TienLuong;
			}
			set
			{
				if ((this._TienLuong != value))
				{
					this.OnTienLuongChanging(value);
					this.SendPropertyChanging();
					this._TienLuong = value;
					this.SendPropertyChanged("TienLuong");
					this.OnTienLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_BANGLUONG", Storage="_NHANVIEN", ThisKey="MaNV", OtherKey="MaNV", IsForeignKey=true)]
		public NHANVIEN NHANVIEN
		{
			get
			{
				return this._NHANVIEN.Entity;
			}
			set
			{
				NHANVIEN previousValue = this._NHANVIEN.Entity;
				if (((previousValue != value) 
							|| (this._NHANVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHANVIEN.Entity = null;
						previousValue.BANGLUONGs.Remove(this);
					}
					this._NHANVIEN.Entity = value;
					if ((value != null))
					{
						value.BANGLUONGs.Add(this);
						this._MaNV = value.MaNV;
					}
					else
					{
						this._MaNV = default(string);
					}
					this.SendPropertyChanged("NHANVIEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CALAM")]
	public partial class CALAM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaCa;
		
		private System.Nullable<System.TimeSpan> _ThoiGianBatDau;
		
		private System.Nullable<System.TimeSpan> _ThoiGianKetThuc;
		
		private double _LuongTheoGio;
		
		private System.Nullable<int> _NhanVienToiDa;
		
		private EntitySet<QUANLYLUONG> _QUANLYLUONGs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaCaChanging(string value);
    partial void OnMaCaChanged();
    partial void OnThoiGianBatDauChanging(System.Nullable<System.TimeSpan> value);
    partial void OnThoiGianBatDauChanged();
    partial void OnThoiGianKetThucChanging(System.Nullable<System.TimeSpan> value);
    partial void OnThoiGianKetThucChanged();
    partial void OnLuongTheoGioChanging(double value);
    partial void OnLuongTheoGioChanged();
    partial void OnNhanVienToiDaChanging(System.Nullable<int> value);
    partial void OnNhanVienToiDaChanged();
    #endregion
		
		public CALAM()
		{
			this._QUANLYLUONGs = new EntitySet<QUANLYLUONG>(new Action<QUANLYLUONG>(this.attach_QUANLYLUONGs), new Action<QUANLYLUONG>(this.detach_QUANLYLUONGs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaCa", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaCa
		{
			get
			{
				return this._MaCa;
			}
			set
			{
				if ((this._MaCa != value))
				{
					this.OnMaCaChanging(value);
					this.SendPropertyChanging();
					this._MaCa = value;
					this.SendPropertyChanged("MaCa");
					this.OnMaCaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThoiGianBatDau", DbType="Time")]
		public System.Nullable<System.TimeSpan> ThoiGianBatDau
		{
			get
			{
				return this._ThoiGianBatDau;
			}
			set
			{
				if ((this._ThoiGianBatDau != value))
				{
					this.OnThoiGianBatDauChanging(value);
					this.SendPropertyChanging();
					this._ThoiGianBatDau = value;
					this.SendPropertyChanged("ThoiGianBatDau");
					this.OnThoiGianBatDauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThoiGianKetThuc", DbType="Time")]
		public System.Nullable<System.TimeSpan> ThoiGianKetThuc
		{
			get
			{
				return this._ThoiGianKetThuc;
			}
			set
			{
				if ((this._ThoiGianKetThuc != value))
				{
					this.OnThoiGianKetThucChanging(value);
					this.SendPropertyChanging();
					this._ThoiGianKetThuc = value;
					this.SendPropertyChanged("ThoiGianKetThuc");
					this.OnThoiGianKetThucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LuongTheoGio", DbType="Float NOT NULL")]
		public double LuongTheoGio
		{
			get
			{
				return this._LuongTheoGio;
			}
			set
			{
				if ((this._LuongTheoGio != value))
				{
					this.OnLuongTheoGioChanging(value);
					this.SendPropertyChanging();
					this._LuongTheoGio = value;
					this.SendPropertyChanged("LuongTheoGio");
					this.OnLuongTheoGioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NhanVienToiDa", DbType="Int")]
		public System.Nullable<int> NhanVienToiDa
		{
			get
			{
				return this._NhanVienToiDa;
			}
			set
			{
				if ((this._NhanVienToiDa != value))
				{
					this.OnNhanVienToiDaChanging(value);
					this.SendPropertyChanging();
					this._NhanVienToiDa = value;
					this.SendPropertyChanged("NhanVienToiDa");
					this.OnNhanVienToiDaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CALAM_QUANLYLUONG", Storage="_QUANLYLUONGs", ThisKey="MaCa", OtherKey="MaCa")]
		public EntitySet<QUANLYLUONG> QUANLYLUONGs
		{
			get
			{
				return this._QUANLYLUONGs;
			}
			set
			{
				this._QUANLYLUONGs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_QUANLYLUONGs(QUANLYLUONG entity)
		{
			this.SendPropertyChanging();
			entity.CALAM = this;
		}
		
		private void detach_QUANLYLUONGs(QUANLYLUONG entity)
		{
			this.SendPropertyChanging();
			entity.CALAM = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CHI")]
	public partial class CHI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Nam;
		
		private int _Thang;
		
		private System.Nullable<float> _LuongNV;
		
		private System.Nullable<float> _PhiNguyenLieu;
		
		private System.Nullable<float> _TienDien;
		
		private System.Nullable<float> _TienNuoc;
		
		private System.Nullable<float> _PhiVeSinh;
		
		private System.Nullable<float> _Tong;
		
		private EntityRef<LOINHUAN> _LOINHUAN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNamChanging(int value);
    partial void OnNamChanged();
    partial void OnThangChanging(int value);
    partial void OnThangChanged();
    partial void OnLuongNVChanging(System.Nullable<float> value);
    partial void OnLuongNVChanged();
    partial void OnPhiNguyenLieuChanging(System.Nullable<float> value);
    partial void OnPhiNguyenLieuChanged();
    partial void OnTienDienChanging(System.Nullable<float> value);
    partial void OnTienDienChanged();
    partial void OnTienNuocChanging(System.Nullable<float> value);
    partial void OnTienNuocChanged();
    partial void OnPhiVeSinhChanging(System.Nullable<float> value);
    partial void OnPhiVeSinhChanged();
    partial void OnTongChanging(System.Nullable<float> value);
    partial void OnTongChanged();
    #endregion
		
		public CHI()
		{
			this._LOINHUAN = default(EntityRef<LOINHUAN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nam", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Nam
		{
			get
			{
				return this._Nam;
			}
			set
			{
				if ((this._Nam != value))
				{
					this.OnNamChanging(value);
					this.SendPropertyChanging();
					this._Nam = value;
					this.SendPropertyChanged("Nam");
					this.OnNamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Thang", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Thang
		{
			get
			{
				return this._Thang;
			}
			set
			{
				if ((this._Thang != value))
				{
					this.OnThangChanging(value);
					this.SendPropertyChanging();
					this._Thang = value;
					this.SendPropertyChanged("Thang");
					this.OnThangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LuongNV", DbType="Real")]
		public System.Nullable<float> LuongNV
		{
			get
			{
				return this._LuongNV;
			}
			set
			{
				if ((this._LuongNV != value))
				{
					this.OnLuongNVChanging(value);
					this.SendPropertyChanging();
					this._LuongNV = value;
					this.SendPropertyChanged("LuongNV");
					this.OnLuongNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhiNguyenLieu", DbType="Real")]
		public System.Nullable<float> PhiNguyenLieu
		{
			get
			{
				return this._PhiNguyenLieu;
			}
			set
			{
				if ((this._PhiNguyenLieu != value))
				{
					this.OnPhiNguyenLieuChanging(value);
					this.SendPropertyChanging();
					this._PhiNguyenLieu = value;
					this.SendPropertyChanged("PhiNguyenLieu");
					this.OnPhiNguyenLieuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TienDien", DbType="Real")]
		public System.Nullable<float> TienDien
		{
			get
			{
				return this._TienDien;
			}
			set
			{
				if ((this._TienDien != value))
				{
					this.OnTienDienChanging(value);
					this.SendPropertyChanging();
					this._TienDien = value;
					this.SendPropertyChanged("TienDien");
					this.OnTienDienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TienNuoc", DbType="Real")]
		public System.Nullable<float> TienNuoc
		{
			get
			{
				return this._TienNuoc;
			}
			set
			{
				if ((this._TienNuoc != value))
				{
					this.OnTienNuocChanging(value);
					this.SendPropertyChanging();
					this._TienNuoc = value;
					this.SendPropertyChanged("TienNuoc");
					this.OnTienNuocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhiVeSinh", DbType="Real")]
		public System.Nullable<float> PhiVeSinh
		{
			get
			{
				return this._PhiVeSinh;
			}
			set
			{
				if ((this._PhiVeSinh != value))
				{
					this.OnPhiVeSinhChanging(value);
					this.SendPropertyChanging();
					this._PhiVeSinh = value;
					this.SendPropertyChanged("PhiVeSinh");
					this.OnPhiVeSinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tong", DbType="Real")]
		public System.Nullable<float> Tong
		{
			get
			{
				return this._Tong;
			}
			set
			{
				if ((this._Tong != value))
				{
					this.OnTongChanging(value);
					this.SendPropertyChanging();
					this._Tong = value;
					this.SendPropertyChanged("Tong");
					this.OnTongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CHI_LOINHUAN", Storage="_LOINHUAN", ThisKey="Nam,Thang", OtherKey="Nam,Thang", IsUnique=true, IsForeignKey=false)]
		public LOINHUAN LOINHUAN
		{
			get
			{
				return this._LOINHUAN.Entity;
			}
			set
			{
				LOINHUAN previousValue = this._LOINHUAN.Entity;
				if (((previousValue != value) 
							|| (this._LOINHUAN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOINHUAN.Entity = null;
						previousValue.CHI = null;
					}
					this._LOINHUAN.Entity = value;
					if ((value != null))
					{
						value.CHI = this;
					}
					this.SendPropertyChanged("LOINHUAN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CHITIETHOADON")]
	public partial class CHITIETHOADON : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaHD;
		
		private string _MaMH;
		
		private int _SoLuong;
		
		private System.Nullable<float> _Tien;
		
		private System.Nullable<int> _DiemTichLuy;
		
		private EntityRef<HOADON> _HOADON;
		
		private EntityRef<MENU> _MENU;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaHDChanging(string value);
    partial void OnMaHDChanged();
    partial void OnMaMHChanging(string value);
    partial void OnMaMHChanged();
    partial void OnSoLuongChanging(int value);
    partial void OnSoLuongChanged();
    partial void OnTienChanging(System.Nullable<float> value);
    partial void OnTienChanged();
    partial void OnDiemTichLuyChanging(System.Nullable<int> value);
    partial void OnDiemTichLuyChanged();
    #endregion
		
		public CHITIETHOADON()
		{
			this._HOADON = default(EntityRef<HOADON>);
			this._MENU = default(EntityRef<MENU>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHD", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaHD
		{
			get
			{
				return this._MaHD;
			}
			set
			{
				if ((this._MaHD != value))
				{
					if (this._HOADON.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHDChanging(value);
					this.SendPropertyChanging();
					this._MaHD = value;
					this.SendPropertyChanged("MaHD");
					this.OnMaHDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaMH", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaMH
		{
			get
			{
				return this._MaMH;
			}
			set
			{
				if ((this._MaMH != value))
				{
					if (this._MENU.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaMHChanging(value);
					this.SendPropertyChanging();
					this._MaMH = value;
					this.SendPropertyChanged("MaMH");
					this.OnMaMHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int NOT NULL")]
		public int SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tien", DbType="Real")]
		public System.Nullable<float> Tien
		{
			get
			{
				return this._Tien;
			}
			set
			{
				if ((this._Tien != value))
				{
					this.OnTienChanging(value);
					this.SendPropertyChanging();
					this._Tien = value;
					this.SendPropertyChanged("Tien");
					this.OnTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiemTichLuy", DbType="Int")]
		public System.Nullable<int> DiemTichLuy
		{
			get
			{
				return this._DiemTichLuy;
			}
			set
			{
				if ((this._DiemTichLuy != value))
				{
					this.OnDiemTichLuyChanging(value);
					this.SendPropertyChanging();
					this._DiemTichLuy = value;
					this.SendPropertyChanged("DiemTichLuy");
					this.OnDiemTichLuyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOADON_CHITIETHOADON", Storage="_HOADON", ThisKey="MaHD", OtherKey="MaHD", IsForeignKey=true)]
		public HOADON HOADON
		{
			get
			{
				return this._HOADON.Entity;
			}
			set
			{
				HOADON previousValue = this._HOADON.Entity;
				if (((previousValue != value) 
							|| (this._HOADON.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HOADON.Entity = null;
						previousValue.CHITIETHOADONs.Remove(this);
					}
					this._HOADON.Entity = value;
					if ((value != null))
					{
						value.CHITIETHOADONs.Add(this);
						this._MaHD = value.MaHD;
					}
					else
					{
						this._MaHD = default(string);
					}
					this.SendPropertyChanged("HOADON");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MENU_CHITIETHOADON", Storage="_MENU", ThisKey="MaMH", OtherKey="MaMH", IsForeignKey=true)]
		public MENU MENU
		{
			get
			{
				return this._MENU.Entity;
			}
			set
			{
				MENU previousValue = this._MENU.Entity;
				if (((previousValue != value) 
							|| (this._MENU.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MENU.Entity = null;
						previousValue.CHITIETHOADONs.Remove(this);
					}
					this._MENU.Entity = value;
					if ((value != null))
					{
						value.CHITIETHOADONs.Add(this);
						this._MaMH = value.MaMH;
					}
					else
					{
						this._MaMH = default(string);
					}
					this.SendPropertyChanged("MENU");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.COUPON")]
	public partial class COUPON : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaCP;
		
		private string _MoTa;
		
		private System.DateTime _NgayBatDau;
		
		private System.DateTime _NgayKetThuc;
		
		private System.Nullable<int> _DiemApDung;
		
		private System.Nullable<float> _MucGiam;
		
		private System.Nullable<float> _GiamToiDa;
		
		private EntitySet<HOADON> _HOADONs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaCPChanging(string value);
    partial void OnMaCPChanged();
    partial void OnMoTaChanging(string value);
    partial void OnMoTaChanged();
    partial void OnNgayBatDauChanging(System.DateTime value);
    partial void OnNgayBatDauChanged();
    partial void OnNgayKetThucChanging(System.DateTime value);
    partial void OnNgayKetThucChanged();
    partial void OnDiemApDungChanging(System.Nullable<int> value);
    partial void OnDiemApDungChanged();
    partial void OnMucGiamChanging(System.Nullable<float> value);
    partial void OnMucGiamChanged();
    partial void OnGiamToiDaChanging(System.Nullable<float> value);
    partial void OnGiamToiDaChanged();
    #endregion
		
		public COUPON()
		{
			this._HOADONs = new EntitySet<HOADON>(new Action<HOADON>(this.attach_HOADONs), new Action<HOADON>(this.detach_HOADONs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaCP", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaCP
		{
			get
			{
				return this._MaCP;
			}
			set
			{
				if ((this._MaCP != value))
				{
					this.OnMaCPChanging(value);
					this.SendPropertyChanging();
					this._MaCP = value;
					this.SendPropertyChanged("MaCP");
					this.OnMaCPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoTa", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string MoTa
		{
			get
			{
				return this._MoTa;
			}
			set
			{
				if ((this._MoTa != value))
				{
					this.OnMoTaChanging(value);
					this.SendPropertyChanging();
					this._MoTa = value;
					this.SendPropertyChanged("MoTa");
					this.OnMoTaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayBatDau", DbType="Date NOT NULL")]
		public System.DateTime NgayBatDau
		{
			get
			{
				return this._NgayBatDau;
			}
			set
			{
				if ((this._NgayBatDau != value))
				{
					this.OnNgayBatDauChanging(value);
					this.SendPropertyChanging();
					this._NgayBatDau = value;
					this.SendPropertyChanged("NgayBatDau");
					this.OnNgayBatDauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayKetThuc", DbType="Date NOT NULL")]
		public System.DateTime NgayKetThuc
		{
			get
			{
				return this._NgayKetThuc;
			}
			set
			{
				if ((this._NgayKetThuc != value))
				{
					this.OnNgayKetThucChanging(value);
					this.SendPropertyChanging();
					this._NgayKetThuc = value;
					this.SendPropertyChanged("NgayKetThuc");
					this.OnNgayKetThucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiemApDung", DbType="Int")]
		public System.Nullable<int> DiemApDung
		{
			get
			{
				return this._DiemApDung;
			}
			set
			{
				if ((this._DiemApDung != value))
				{
					this.OnDiemApDungChanging(value);
					this.SendPropertyChanging();
					this._DiemApDung = value;
					this.SendPropertyChanged("DiemApDung");
					this.OnDiemApDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MucGiam", DbType="Real")]
		public System.Nullable<float> MucGiam
		{
			get
			{
				return this._MucGiam;
			}
			set
			{
				if ((this._MucGiam != value))
				{
					this.OnMucGiamChanging(value);
					this.SendPropertyChanging();
					this._MucGiam = value;
					this.SendPropertyChanged("MucGiam");
					this.OnMucGiamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiamToiDa", DbType="Real")]
		public System.Nullable<float> GiamToiDa
		{
			get
			{
				return this._GiamToiDa;
			}
			set
			{
				if ((this._GiamToiDa != value))
				{
					this.OnGiamToiDaChanging(value);
					this.SendPropertyChanging();
					this._GiamToiDa = value;
					this.SendPropertyChanged("GiamToiDa");
					this.OnGiamToiDaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="COUPON_HOADON", Storage="_HOADONs", ThisKey="MaCP", OtherKey="MaCP")]
		public EntitySet<HOADON> HOADONs
		{
			get
			{
				return this._HOADONs;
			}
			set
			{
				this._HOADONs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HOADONs(HOADON entity)
		{
			this.SendPropertyChanging();
			entity.COUPON = this;
		}
		
		private void detach_HOADONs(HOADON entity)
		{
			this.SendPropertyChanging();
			entity.COUPON = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DANGNHAP")]
	public partial class DANGNHAP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaTK;
		
		private string _MaND;
		
		private string _TenDangNhap;
		
		private string _MatKhau;
		
		private EntityRef<QUANLY> _QUANLY;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaTKChanging(string value);
    partial void OnMaTKChanged();
    partial void OnMaNDChanging(string value);
    partial void OnMaNDChanged();
    partial void OnTenDangNhapChanging(string value);
    partial void OnTenDangNhapChanged();
    partial void OnMatKhauChanging(string value);
    partial void OnMatKhauChanged();
    #endregion
		
		public DANGNHAP()
		{
			this._QUANLY = default(EntityRef<QUANLY>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTK", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaTK
		{
			get
			{
				return this._MaTK;
			}
			set
			{
				if ((this._MaTK != value))
				{
					this.OnMaTKChanging(value);
					this.SendPropertyChanging();
					this._MaTK = value;
					this.SendPropertyChanged("MaTK");
					this.OnMaTKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaND", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string MaND
		{
			get
			{
				return this._MaND;
			}
			set
			{
				if ((this._MaND != value))
				{
					if (this._QUANLY.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNDChanging(value);
					this.SendPropertyChanging();
					this._MaND = value;
					this.SendPropertyChanged("MaND");
					this.OnMaNDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenDangNhap", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string TenDangNhap
		{
			get
			{
				return this._TenDangNhap;
			}
			set
			{
				if ((this._TenDangNhap != value))
				{
					this.OnTenDangNhapChanging(value);
					this.SendPropertyChanging();
					this._TenDangNhap = value;
					this.SendPropertyChanged("TenDangNhap");
					this.OnTenDangNhapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatKhau", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string MatKhau
		{
			get
			{
				return this._MatKhau;
			}
			set
			{
				if ((this._MatKhau != value))
				{
					this.OnMatKhauChanging(value);
					this.SendPropertyChanging();
					this._MatKhau = value;
					this.SendPropertyChanged("MatKhau");
					this.OnMatKhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QUANLY_DANGNHAP", Storage="_QUANLY", ThisKey="MaND", OtherKey="MaQL", IsForeignKey=true)]
		public QUANLY QUANLY
		{
			get
			{
				return this._QUANLY.Entity;
			}
			set
			{
				QUANLY previousValue = this._QUANLY.Entity;
				if (((previousValue != value) 
							|| (this._QUANLY.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._QUANLY.Entity = null;
						previousValue.DANGNHAPs.Remove(this);
					}
					this._QUANLY.Entity = value;
					if ((value != null))
					{
						value.DANGNHAPs.Add(this);
						this._MaND = value.MaQL;
					}
					else
					{
						this._MaND = default(string);
					}
					this.SendPropertyChanged("QUANLY");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DANGNHAP2")]
	public partial class DANGNHAP2 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaTK;
		
		private string _MaND;
		
		private string _TenDangNhap;
		
		private string _MatKhau;
		
		private EntityRef<NHANVIEN> _NHANVIEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaTKChanging(string value);
    partial void OnMaTKChanged();
    partial void OnMaNDChanging(string value);
    partial void OnMaNDChanged();
    partial void OnTenDangNhapChanging(string value);
    partial void OnTenDangNhapChanged();
    partial void OnMatKhauChanging(string value);
    partial void OnMatKhauChanged();
    #endregion
		
		public DANGNHAP2()
		{
			this._NHANVIEN = default(EntityRef<NHANVIEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTK", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaTK
		{
			get
			{
				return this._MaTK;
			}
			set
			{
				if ((this._MaTK != value))
				{
					this.OnMaTKChanging(value);
					this.SendPropertyChanging();
					this._MaTK = value;
					this.SendPropertyChanged("MaTK");
					this.OnMaTKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaND", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string MaND
		{
			get
			{
				return this._MaND;
			}
			set
			{
				if ((this._MaND != value))
				{
					if (this._NHANVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNDChanging(value);
					this.SendPropertyChanging();
					this._MaND = value;
					this.SendPropertyChanged("MaND");
					this.OnMaNDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenDangNhap", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string TenDangNhap
		{
			get
			{
				return this._TenDangNhap;
			}
			set
			{
				if ((this._TenDangNhap != value))
				{
					this.OnTenDangNhapChanging(value);
					this.SendPropertyChanging();
					this._TenDangNhap = value;
					this.SendPropertyChanged("TenDangNhap");
					this.OnTenDangNhapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatKhau", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string MatKhau
		{
			get
			{
				return this._MatKhau;
			}
			set
			{
				if ((this._MatKhau != value))
				{
					this.OnMatKhauChanging(value);
					this.SendPropertyChanging();
					this._MatKhau = value;
					this.SendPropertyChanged("MatKhau");
					this.OnMatKhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_DANGNHAP2", Storage="_NHANVIEN", ThisKey="MaND", OtherKey="MaNV", IsForeignKey=true)]
		public NHANVIEN NHANVIEN
		{
			get
			{
				return this._NHANVIEN.Entity;
			}
			set
			{
				NHANVIEN previousValue = this._NHANVIEN.Entity;
				if (((previousValue != value) 
							|| (this._NHANVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHANVIEN.Entity = null;
						previousValue.DANGNHAP2s.Remove(this);
					}
					this._NHANVIEN.Entity = value;
					if ((value != null))
					{
						value.DANGNHAP2s.Add(this);
						this._MaND = value.MaNV;
					}
					else
					{
						this._MaND = default(string);
					}
					this.SendPropertyChanged("NHANVIEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DOANHTHU")]
	public partial class DOANHTHU : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Nam;
		
		private int _Thang;
		
		private System.Nullable<float> _DoanhThu1;
		
		private System.Nullable<int> _SoDonHang;
		
		private EntityRef<LOINHUAN> _LOINHUAN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNamChanging(int value);
    partial void OnNamChanged();
    partial void OnThangChanging(int value);
    partial void OnThangChanged();
    partial void OnDoanhThu1Changing(System.Nullable<float> value);
    partial void OnDoanhThu1Changed();
    partial void OnSoDonHangChanging(System.Nullable<int> value);
    partial void OnSoDonHangChanged();
    #endregion
		
		public DOANHTHU()
		{
			this._LOINHUAN = default(EntityRef<LOINHUAN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nam", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Nam
		{
			get
			{
				return this._Nam;
			}
			set
			{
				if ((this._Nam != value))
				{
					this.OnNamChanging(value);
					this.SendPropertyChanging();
					this._Nam = value;
					this.SendPropertyChanged("Nam");
					this.OnNamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Thang", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Thang
		{
			get
			{
				return this._Thang;
			}
			set
			{
				if ((this._Thang != value))
				{
					this.OnThangChanging(value);
					this.SendPropertyChanging();
					this._Thang = value;
					this.SendPropertyChanged("Thang");
					this.OnThangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="DoanhThu", Storage="_DoanhThu1", DbType="Real")]
		public System.Nullable<float> DoanhThu1
		{
			get
			{
				return this._DoanhThu1;
			}
			set
			{
				if ((this._DoanhThu1 != value))
				{
					this.OnDoanhThu1Changing(value);
					this.SendPropertyChanging();
					this._DoanhThu1 = value;
					this.SendPropertyChanged("DoanhThu1");
					this.OnDoanhThu1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoDonHang", DbType="Int")]
		public System.Nullable<int> SoDonHang
		{
			get
			{
				return this._SoDonHang;
			}
			set
			{
				if ((this._SoDonHang != value))
				{
					this.OnSoDonHangChanging(value);
					this.SendPropertyChanging();
					this._SoDonHang = value;
					this.SendPropertyChanged("SoDonHang");
					this.OnSoDonHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DOANHTHU_LOINHUAN", Storage="_LOINHUAN", ThisKey="Nam,Thang", OtherKey="Nam,Thang", IsUnique=true, IsForeignKey=false)]
		public LOINHUAN LOINHUAN
		{
			get
			{
				return this._LOINHUAN.Entity;
			}
			set
			{
				LOINHUAN previousValue = this._LOINHUAN.Entity;
				if (((previousValue != value) 
							|| (this._LOINHUAN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOINHUAN.Entity = null;
						previousValue.DOANHTHU1 = null;
					}
					this._LOINHUAN.Entity = value;
					if ((value != null))
					{
						value.DOANHTHU1 = this;
					}
					this.SendPropertyChanged("LOINHUAN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HOADON")]
	public partial class HOADON : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaHD;
		
		private string _MaKH;
		
		private string _MaNV;
		
		private float _ThanhTien;
		
		private System.DateTime _NgayXuatHD;
		
		private string _MaCP;
		
		private EntitySet<CHITIETHOADON> _CHITIETHOADONs;
		
		private EntityRef<COUPON> _COUPON;
		
		private EntityRef<KHACHHANG> _KHACHHANG;
		
		private EntityRef<NHANVIEN> _NHANVIEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaHDChanging(string value);
    partial void OnMaHDChanged();
    partial void OnMaKHChanging(string value);
    partial void OnMaKHChanged();
    partial void OnMaNVChanging(string value);
    partial void OnMaNVChanged();
    partial void OnThanhTienChanging(float value);
    partial void OnThanhTienChanged();
    partial void OnNgayXuatHDChanging(System.DateTime value);
    partial void OnNgayXuatHDChanged();
    partial void OnMaCPChanging(string value);
    partial void OnMaCPChanged();
    #endregion
		
		public HOADON()
		{
			this._CHITIETHOADONs = new EntitySet<CHITIETHOADON>(new Action<CHITIETHOADON>(this.attach_CHITIETHOADONs), new Action<CHITIETHOADON>(this.detach_CHITIETHOADONs));
			this._COUPON = default(EntityRef<COUPON>);
			this._KHACHHANG = default(EntityRef<KHACHHANG>);
			this._NHANVIEN = default(EntityRef<NHANVIEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHD", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaHD
		{
			get
			{
				return this._MaHD;
			}
			set
			{
				if ((this._MaHD != value))
				{
					this.OnMaHDChanging(value);
					this.SendPropertyChanging();
					this._MaHD = value;
					this.SendPropertyChanged("MaHD");
					this.OnMaHDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKH", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string MaKH
		{
			get
			{
				return this._MaKH;
			}
			set
			{
				if ((this._MaKH != value))
				{
					if (this._KHACHHANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaKHChanging(value);
					this.SendPropertyChanging();
					this._MaKH = value;
					this.SendPropertyChanged("MaKH");
					this.OnMaKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNV", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string MaNV
		{
			get
			{
				return this._MaNV;
			}
			set
			{
				if ((this._MaNV != value))
				{
					if (this._NHANVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNVChanging(value);
					this.SendPropertyChanging();
					this._MaNV = value;
					this.SendPropertyChanged("MaNV");
					this.OnMaNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThanhTien", DbType="Real NOT NULL")]
		public float ThanhTien
		{
			get
			{
				return this._ThanhTien;
			}
			set
			{
				if ((this._ThanhTien != value))
				{
					this.OnThanhTienChanging(value);
					this.SendPropertyChanging();
					this._ThanhTien = value;
					this.SendPropertyChanged("ThanhTien");
					this.OnThanhTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayXuatHD", DbType="Date NOT NULL")]
		public System.DateTime NgayXuatHD
		{
			get
			{
				return this._NgayXuatHD;
			}
			set
			{
				if ((this._NgayXuatHD != value))
				{
					this.OnNgayXuatHDChanging(value);
					this.SendPropertyChanging();
					this._NgayXuatHD = value;
					this.SendPropertyChanged("NgayXuatHD");
					this.OnNgayXuatHDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaCP", DbType="NChar(10)")]
		public string MaCP
		{
			get
			{
				return this._MaCP;
			}
			set
			{
				if ((this._MaCP != value))
				{
					if (this._COUPON.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaCPChanging(value);
					this.SendPropertyChanging();
					this._MaCP = value;
					this.SendPropertyChanged("MaCP");
					this.OnMaCPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOADON_CHITIETHOADON", Storage="_CHITIETHOADONs", ThisKey="MaHD", OtherKey="MaHD")]
		public EntitySet<CHITIETHOADON> CHITIETHOADONs
		{
			get
			{
				return this._CHITIETHOADONs;
			}
			set
			{
				this._CHITIETHOADONs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="COUPON_HOADON", Storage="_COUPON", ThisKey="MaCP", OtherKey="MaCP", IsForeignKey=true)]
		public COUPON COUPON
		{
			get
			{
				return this._COUPON.Entity;
			}
			set
			{
				COUPON previousValue = this._COUPON.Entity;
				if (((previousValue != value) 
							|| (this._COUPON.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._COUPON.Entity = null;
						previousValue.HOADONs.Remove(this);
					}
					this._COUPON.Entity = value;
					if ((value != null))
					{
						value.HOADONs.Add(this);
						this._MaCP = value.MaCP;
					}
					else
					{
						this._MaCP = default(string);
					}
					this.SendPropertyChanged("COUPON");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_HOADON", Storage="_KHACHHANG", ThisKey="MaKH", OtherKey="MaKH", IsForeignKey=true)]
		public KHACHHANG KHACHHANG
		{
			get
			{
				return this._KHACHHANG.Entity;
			}
			set
			{
				KHACHHANG previousValue = this._KHACHHANG.Entity;
				if (((previousValue != value) 
							|| (this._KHACHHANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHACHHANG.Entity = null;
						previousValue.HOADONs.Remove(this);
					}
					this._KHACHHANG.Entity = value;
					if ((value != null))
					{
						value.HOADONs.Add(this);
						this._MaKH = value.MaKH;
					}
					else
					{
						this._MaKH = default(string);
					}
					this.SendPropertyChanged("KHACHHANG");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_HOADON", Storage="_NHANVIEN", ThisKey="MaNV", OtherKey="MaNV", IsForeignKey=true)]
		public NHANVIEN NHANVIEN
		{
			get
			{
				return this._NHANVIEN.Entity;
			}
			set
			{
				NHANVIEN previousValue = this._NHANVIEN.Entity;
				if (((previousValue != value) 
							|| (this._NHANVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHANVIEN.Entity = null;
						previousValue.HOADONs.Remove(this);
					}
					this._NHANVIEN.Entity = value;
					if ((value != null))
					{
						value.HOADONs.Add(this);
						this._MaNV = value.MaNV;
					}
					else
					{
						this._MaNV = default(string);
					}
					this.SendPropertyChanged("NHANVIEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CHITIETHOADONs(CHITIETHOADON entity)
		{
			this.SendPropertyChanging();
			entity.HOADON = this;
		}
		
		private void detach_CHITIETHOADONs(CHITIETHOADON entity)
		{
			this.SendPropertyChanging();
			entity.HOADON = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KHACHHANG")]
	public partial class KHACHHANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaKH;
		
		private string _TenKH;
		
		private string _SDT;
		
		private string _DiaChi;
		
		private System.Nullable<int> _DiemTichLuy;
		
		private EntitySet<HOADON> _HOADONs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaKHChanging(string value);
    partial void OnMaKHChanged();
    partial void OnTenKHChanging(string value);
    partial void OnTenKHChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnDiemTichLuyChanging(System.Nullable<int> value);
    partial void OnDiemTichLuyChanged();
    #endregion
		
		public KHACHHANG()
		{
			this._HOADONs = new EntitySet<HOADON>(new Action<HOADON>(this.attach_HOADONs), new Action<HOADON>(this.detach_HOADONs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKH", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaKH
		{
			get
			{
				return this._MaKH;
			}
			set
			{
				if ((this._MaKH != value))
				{
					this.OnMaKHChanging(value);
					this.SendPropertyChanging();
					this._MaKH = value;
					this.SendPropertyChanged("MaKH");
					this.OnMaKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenKH", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string TenKH
		{
			get
			{
				return this._TenKH;
			}
			set
			{
				if ((this._TenKH != value))
				{
					this.OnTenKHChanging(value);
					this.SendPropertyChanging();
					this._TenKH = value;
					this.SendPropertyChanged("TenKH");
					this.OnTenKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="Char(20) NOT NULL", CanBeNull=false)]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(50)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiemTichLuy", DbType="Int")]
		public System.Nullable<int> DiemTichLuy
		{
			get
			{
				return this._DiemTichLuy;
			}
			set
			{
				if ((this._DiemTichLuy != value))
				{
					this.OnDiemTichLuyChanging(value);
					this.SendPropertyChanging();
					this._DiemTichLuy = value;
					this.SendPropertyChanged("DiemTichLuy");
					this.OnDiemTichLuyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_HOADON", Storage="_HOADONs", ThisKey="MaKH", OtherKey="MaKH")]
		public EntitySet<HOADON> HOADONs
		{
			get
			{
				return this._HOADONs;
			}
			set
			{
				this._HOADONs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HOADONs(HOADON entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = this;
		}
		
		private void detach_HOADONs(HOADON entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MENU")]
	public partial class MENU : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaMH;
		
		private string _TenMH;
		
		private float _GiaTien;
		
		private int _DiemTichLuy;
		
		private EntitySet<CHITIETHOADON> _CHITIETHOADONs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaMHChanging(string value);
    partial void OnMaMHChanged();
    partial void OnTenMHChanging(string value);
    partial void OnTenMHChanged();
    partial void OnGiaTienChanging(float value);
    partial void OnGiaTienChanged();
    partial void OnDiemTichLuyChanging(int value);
    partial void OnDiemTichLuyChanged();
    #endregion
		
		public MENU()
		{
			this._CHITIETHOADONs = new EntitySet<CHITIETHOADON>(new Action<CHITIETHOADON>(this.attach_CHITIETHOADONs), new Action<CHITIETHOADON>(this.detach_CHITIETHOADONs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaMH", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaMH
		{
			get
			{
				return this._MaMH;
			}
			set
			{
				if ((this._MaMH != value))
				{
					this.OnMaMHChanging(value);
					this.SendPropertyChanging();
					this._MaMH = value;
					this.SendPropertyChanged("MaMH");
					this.OnMaMHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenMH", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string TenMH
		{
			get
			{
				return this._TenMH;
			}
			set
			{
				if ((this._TenMH != value))
				{
					this.OnTenMHChanging(value);
					this.SendPropertyChanging();
					this._TenMH = value;
					this.SendPropertyChanged("TenMH");
					this.OnTenMHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiaTien", DbType="Real NOT NULL")]
		public float GiaTien
		{
			get
			{
				return this._GiaTien;
			}
			set
			{
				if ((this._GiaTien != value))
				{
					this.OnGiaTienChanging(value);
					this.SendPropertyChanging();
					this._GiaTien = value;
					this.SendPropertyChanged("GiaTien");
					this.OnGiaTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiemTichLuy", DbType="Int NOT NULL")]
		public int DiemTichLuy
		{
			get
			{
				return this._DiemTichLuy;
			}
			set
			{
				if ((this._DiemTichLuy != value))
				{
					this.OnDiemTichLuyChanging(value);
					this.SendPropertyChanging();
					this._DiemTichLuy = value;
					this.SendPropertyChanged("DiemTichLuy");
					this.OnDiemTichLuyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MENU_CHITIETHOADON", Storage="_CHITIETHOADONs", ThisKey="MaMH", OtherKey="MaMH")]
		public EntitySet<CHITIETHOADON> CHITIETHOADONs
		{
			get
			{
				return this._CHITIETHOADONs;
			}
			set
			{
				this._CHITIETHOADONs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CHITIETHOADONs(CHITIETHOADON entity)
		{
			this.SendPropertyChanging();
			entity.MENU = this;
		}
		
		private void detach_CHITIETHOADONs(CHITIETHOADON entity)
		{
			this.SendPropertyChanging();
			entity.MENU = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LOINHUAN")]
	public partial class LOINHUAN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Nam;
		
		private int _Thang;
		
		private System.Nullable<float> _DoanhThu;
		
		private System.Nullable<float> _ChiPhi;
		
		private System.Nullable<float> _LoiNhuan1;
		
		private EntityRef<CHI> _CHI;
		
		private EntityRef<DOANHTHU> _DOANHTHU1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNamChanging(int value);
    partial void OnNamChanged();
    partial void OnThangChanging(int value);
    partial void OnThangChanged();
    partial void OnDoanhThuChanging(System.Nullable<float> value);
    partial void OnDoanhThuChanged();
    partial void OnChiPhiChanging(System.Nullable<float> value);
    partial void OnChiPhiChanged();
    partial void OnLoiNhuan1Changing(System.Nullable<float> value);
    partial void OnLoiNhuan1Changed();
    #endregion
		
		public LOINHUAN()
		{
			this._CHI = default(EntityRef<CHI>);
			this._DOANHTHU1 = default(EntityRef<DOANHTHU>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nam", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Nam
		{
			get
			{
				return this._Nam;
			}
			set
			{
				if ((this._Nam != value))
				{
					if ((this._CHI.HasLoadedOrAssignedValue || this._DOANHTHU1.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNamChanging(value);
					this.SendPropertyChanging();
					this._Nam = value;
					this.SendPropertyChanged("Nam");
					this.OnNamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Thang", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Thang
		{
			get
			{
				return this._Thang;
			}
			set
			{
				if ((this._Thang != value))
				{
					if ((this._CHI.HasLoadedOrAssignedValue || this._DOANHTHU1.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnThangChanging(value);
					this.SendPropertyChanging();
					this._Thang = value;
					this.SendPropertyChanged("Thang");
					this.OnThangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoanhThu", DbType="Real")]
		public System.Nullable<float> DoanhThu
		{
			get
			{
				return this._DoanhThu;
			}
			set
			{
				if ((this._DoanhThu != value))
				{
					this.OnDoanhThuChanging(value);
					this.SendPropertyChanging();
					this._DoanhThu = value;
					this.SendPropertyChanged("DoanhThu");
					this.OnDoanhThuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChiPhi", DbType="Real")]
		public System.Nullable<float> ChiPhi
		{
			get
			{
				return this._ChiPhi;
			}
			set
			{
				if ((this._ChiPhi != value))
				{
					this.OnChiPhiChanging(value);
					this.SendPropertyChanging();
					this._ChiPhi = value;
					this.SendPropertyChanged("ChiPhi");
					this.OnChiPhiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="LoiNhuan", Storage="_LoiNhuan1", DbType="Real")]
		public System.Nullable<float> LoiNhuan1
		{
			get
			{
				return this._LoiNhuan1;
			}
			set
			{
				if ((this._LoiNhuan1 != value))
				{
					this.OnLoiNhuan1Changing(value);
					this.SendPropertyChanging();
					this._LoiNhuan1 = value;
					this.SendPropertyChanged("LoiNhuan1");
					this.OnLoiNhuan1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CHI_LOINHUAN", Storage="_CHI", ThisKey="Nam,Thang", OtherKey="Nam,Thang", IsForeignKey=true)]
		public CHI CHI
		{
			get
			{
				return this._CHI.Entity;
			}
			set
			{
				CHI previousValue = this._CHI.Entity;
				if (((previousValue != value) 
							|| (this._CHI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CHI.Entity = null;
						previousValue.LOINHUAN = null;
					}
					this._CHI.Entity = value;
					if ((value != null))
					{
						value.LOINHUAN = this;
						this._Nam = value.Nam;
						this._Thang = value.Thang;
					}
					else
					{
						this._Nam = default(int);
						this._Thang = default(int);
					}
					this.SendPropertyChanged("CHI");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DOANHTHU_LOINHUAN", Storage="_DOANHTHU1", ThisKey="Nam,Thang", OtherKey="Nam,Thang", IsForeignKey=true)]
		public DOANHTHU DOANHTHU1
		{
			get
			{
				return this._DOANHTHU1.Entity;
			}
			set
			{
				DOANHTHU previousValue = this._DOANHTHU1.Entity;
				if (((previousValue != value) 
							|| (this._DOANHTHU1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DOANHTHU1.Entity = null;
						previousValue.LOINHUAN = null;
					}
					this._DOANHTHU1.Entity = value;
					if ((value != null))
					{
						value.LOINHUAN = this;
						this._Nam = value.Nam;
						this._Thang = value.Thang;
					}
					else
					{
						this._Nam = default(int);
						this._Thang = default(int);
					}
					this.SendPropertyChanged("DOANHTHU1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NHANVIEN")]
	public partial class NHANVIEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaNV;
		
		private string _TenNV;
		
		private string _SDT;
		
		private string _DiaChi;
		
		private System.DateTime _NgayNV;
		
		private string _CMND;
		
		private System.Nullable<bool> _ConLam;
		
		private EntitySet<BANGLUONG> _BANGLUONGs;
		
		private EntitySet<DANGNHAP2> _DANGNHAP2s;
		
		private EntitySet<HOADON> _HOADONs;
		
		private EntitySet<QUANLYLUONG> _QUANLYLUONGs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNVChanging(string value);
    partial void OnMaNVChanged();
    partial void OnTenNVChanging(string value);
    partial void OnTenNVChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnNgayNVChanging(System.DateTime value);
    partial void OnNgayNVChanged();
    partial void OnCMNDChanging(string value);
    partial void OnCMNDChanged();
    partial void OnConLamChanging(System.Nullable<bool> value);
    partial void OnConLamChanged();
    #endregion
		
		public NHANVIEN()
		{
			this._BANGLUONGs = new EntitySet<BANGLUONG>(new Action<BANGLUONG>(this.attach_BANGLUONGs), new Action<BANGLUONG>(this.detach_BANGLUONGs));
			this._DANGNHAP2s = new EntitySet<DANGNHAP2>(new Action<DANGNHAP2>(this.attach_DANGNHAP2s), new Action<DANGNHAP2>(this.detach_DANGNHAP2s));
			this._HOADONs = new EntitySet<HOADON>(new Action<HOADON>(this.attach_HOADONs), new Action<HOADON>(this.detach_HOADONs));
			this._QUANLYLUONGs = new EntitySet<QUANLYLUONG>(new Action<QUANLYLUONG>(this.attach_QUANLYLUONGs), new Action<QUANLYLUONG>(this.detach_QUANLYLUONGs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNV", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaNV
		{
			get
			{
				return this._MaNV;
			}
			set
			{
				if ((this._MaNV != value))
				{
					this.OnMaNVChanging(value);
					this.SendPropertyChanging();
					this._MaNV = value;
					this.SendPropertyChanged("MaNV");
					this.OnMaNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenNV", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string TenNV
		{
			get
			{
				return this._TenNV;
			}
			set
			{
				if ((this._TenNV != value))
				{
					this.OnTenNVChanging(value);
					this.SendPropertyChanging();
					this._TenNV = value;
					this.SendPropertyChanged("TenNV");
					this.OnTenNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="Char(20) NOT NULL", CanBeNull=false)]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayNV", DbType="Date NOT NULL")]
		public System.DateTime NgayNV
		{
			get
			{
				return this._NgayNV;
			}
			set
			{
				if ((this._NgayNV != value))
				{
					this.OnNgayNVChanging(value);
					this.SendPropertyChanging();
					this._NgayNV = value;
					this.SendPropertyChanged("NgayNV");
					this.OnNgayNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CMND", DbType="NChar(20) NOT NULL", CanBeNull=false)]
		public string CMND
		{
			get
			{
				return this._CMND;
			}
			set
			{
				if ((this._CMND != value))
				{
					this.OnCMNDChanging(value);
					this.SendPropertyChanging();
					this._CMND = value;
					this.SendPropertyChanged("CMND");
					this.OnCMNDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConLam", DbType="Bit")]
		public System.Nullable<bool> ConLam
		{
			get
			{
				return this._ConLam;
			}
			set
			{
				if ((this._ConLam != value))
				{
					this.OnConLamChanging(value);
					this.SendPropertyChanging();
					this._ConLam = value;
					this.SendPropertyChanged("ConLam");
					this.OnConLamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_BANGLUONG", Storage="_BANGLUONGs", ThisKey="MaNV", OtherKey="MaNV")]
		public EntitySet<BANGLUONG> BANGLUONGs
		{
			get
			{
				return this._BANGLUONGs;
			}
			set
			{
				this._BANGLUONGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_DANGNHAP2", Storage="_DANGNHAP2s", ThisKey="MaNV", OtherKey="MaND")]
		public EntitySet<DANGNHAP2> DANGNHAP2s
		{
			get
			{
				return this._DANGNHAP2s;
			}
			set
			{
				this._DANGNHAP2s.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_HOADON", Storage="_HOADONs", ThisKey="MaNV", OtherKey="MaNV")]
		public EntitySet<HOADON> HOADONs
		{
			get
			{
				return this._HOADONs;
			}
			set
			{
				this._HOADONs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_QUANLYLUONG", Storage="_QUANLYLUONGs", ThisKey="MaNV", OtherKey="MaNV")]
		public EntitySet<QUANLYLUONG> QUANLYLUONGs
		{
			get
			{
				return this._QUANLYLUONGs;
			}
			set
			{
				this._QUANLYLUONGs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BANGLUONGs(BANGLUONG entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = this;
		}
		
		private void detach_BANGLUONGs(BANGLUONG entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = null;
		}
		
		private void attach_DANGNHAP2s(DANGNHAP2 entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = this;
		}
		
		private void detach_DANGNHAP2s(DANGNHAP2 entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = null;
		}
		
		private void attach_HOADONs(HOADON entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = this;
		}
		
		private void detach_HOADONs(HOADON entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = null;
		}
		
		private void attach_QUANLYLUONGs(QUANLYLUONG entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = this;
		}
		
		private void detach_QUANLYLUONGs(QUANLYLUONG entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QUANLY")]
	public partial class QUANLY : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaQL;
		
		private string _TenQL;
		
		private string _SDT;
		
		private string _DiaChi;
		
		private string _CMND;
		
		private EntitySet<DANGNHAP> _DANGNHAPs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaQLChanging(string value);
    partial void OnMaQLChanged();
    partial void OnTenQLChanging(string value);
    partial void OnTenQLChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnCMNDChanging(string value);
    partial void OnCMNDChanged();
    #endregion
		
		public QUANLY()
		{
			this._DANGNHAPs = new EntitySet<DANGNHAP>(new Action<DANGNHAP>(this.attach_DANGNHAPs), new Action<DANGNHAP>(this.detach_DANGNHAPs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaQL", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaQL
		{
			get
			{
				return this._MaQL;
			}
			set
			{
				if ((this._MaQL != value))
				{
					this.OnMaQLChanging(value);
					this.SendPropertyChanging();
					this._MaQL = value;
					this.SendPropertyChanged("MaQL");
					this.OnMaQLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenQL", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenQL
		{
			get
			{
				return this._TenQL;
			}
			set
			{
				if ((this._TenQL != value))
				{
					this.OnTenQLChanging(value);
					this.SendPropertyChanging();
					this._TenQL = value;
					this.SendPropertyChanged("TenQL");
					this.OnTenQLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="NChar(20) NOT NULL", CanBeNull=false)]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CMND", DbType="NChar(20) NOT NULL", CanBeNull=false)]
		public string CMND
		{
			get
			{
				return this._CMND;
			}
			set
			{
				if ((this._CMND != value))
				{
					this.OnCMNDChanging(value);
					this.SendPropertyChanging();
					this._CMND = value;
					this.SendPropertyChanged("CMND");
					this.OnCMNDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QUANLY_DANGNHAP", Storage="_DANGNHAPs", ThisKey="MaQL", OtherKey="MaND")]
		public EntitySet<DANGNHAP> DANGNHAPs
		{
			get
			{
				return this._DANGNHAPs;
			}
			set
			{
				this._DANGNHAPs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DANGNHAPs(DANGNHAP entity)
		{
			this.SendPropertyChanging();
			entity.QUANLY = this;
		}
		
		private void detach_DANGNHAPs(DANGNHAP entity)
		{
			this.SendPropertyChanging();
			entity.QUANLY = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QUANLYLUONG")]
	public partial class QUANLYLUONG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.DateTime _ThoiGian;
		
		private string _MaNV;
		
		private string _MaCa;
		
		private System.Nullable<float> _MucDoHoanThanh;
		
		private System.Nullable<float> _Luong;
		
		private EntityRef<CALAM> _CALAM;
		
		private EntityRef<NHANVIEN> _NHANVIEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnThoiGianChanging(System.DateTime value);
    partial void OnThoiGianChanged();
    partial void OnMaNVChanging(string value);
    partial void OnMaNVChanged();
    partial void OnMaCaChanging(string value);
    partial void OnMaCaChanged();
    partial void OnMucDoHoanThanhChanging(System.Nullable<float> value);
    partial void OnMucDoHoanThanhChanged();
    partial void OnLuongChanging(System.Nullable<float> value);
    partial void OnLuongChanged();
    #endregion
		
		public QUANLYLUONG()
		{
			this._CALAM = default(EntityRef<CALAM>);
			this._NHANVIEN = default(EntityRef<NHANVIEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThoiGian", DbType="Date NOT NULL", IsPrimaryKey=true)]
		public System.DateTime ThoiGian
		{
			get
			{
				return this._ThoiGian;
			}
			set
			{
				if ((this._ThoiGian != value))
				{
					this.OnThoiGianChanging(value);
					this.SendPropertyChanging();
					this._ThoiGian = value;
					this.SendPropertyChanged("ThoiGian");
					this.OnThoiGianChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNV", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaNV
		{
			get
			{
				return this._MaNV;
			}
			set
			{
				if ((this._MaNV != value))
				{
					if (this._NHANVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNVChanging(value);
					this.SendPropertyChanging();
					this._MaNV = value;
					this.SendPropertyChanged("MaNV");
					this.OnMaNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaCa", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaCa
		{
			get
			{
				return this._MaCa;
			}
			set
			{
				if ((this._MaCa != value))
				{
					if (this._CALAM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaCaChanging(value);
					this.SendPropertyChanging();
					this._MaCa = value;
					this.SendPropertyChanged("MaCa");
					this.OnMaCaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MucDoHoanThanh", DbType="Real")]
		public System.Nullable<float> MucDoHoanThanh
		{
			get
			{
				return this._MucDoHoanThanh;
			}
			set
			{
				if ((this._MucDoHoanThanh != value))
				{
					this.OnMucDoHoanThanhChanging(value);
					this.SendPropertyChanging();
					this._MucDoHoanThanh = value;
					this.SendPropertyChanged("MucDoHoanThanh");
					this.OnMucDoHoanThanhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Luong", DbType="Real")]
		public System.Nullable<float> Luong
		{
			get
			{
				return this._Luong;
			}
			set
			{
				if ((this._Luong != value))
				{
					this.OnLuongChanging(value);
					this.SendPropertyChanging();
					this._Luong = value;
					this.SendPropertyChanged("Luong");
					this.OnLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CALAM_QUANLYLUONG", Storage="_CALAM", ThisKey="MaCa", OtherKey="MaCa", IsForeignKey=true)]
		public CALAM CALAM
		{
			get
			{
				return this._CALAM.Entity;
			}
			set
			{
				CALAM previousValue = this._CALAM.Entity;
				if (((previousValue != value) 
							|| (this._CALAM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CALAM.Entity = null;
						previousValue.QUANLYLUONGs.Remove(this);
					}
					this._CALAM.Entity = value;
					if ((value != null))
					{
						value.QUANLYLUONGs.Add(this);
						this._MaCa = value.MaCa;
					}
					else
					{
						this._MaCa = default(string);
					}
					this.SendPropertyChanged("CALAM");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_QUANLYLUONG", Storage="_NHANVIEN", ThisKey="MaNV", OtherKey="MaNV", IsForeignKey=true)]
		public NHANVIEN NHANVIEN
		{
			get
			{
				return this._NHANVIEN.Entity;
			}
			set
			{
				NHANVIEN previousValue = this._NHANVIEN.Entity;
				if (((previousValue != value) 
							|| (this._NHANVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHANVIEN.Entity = null;
						previousValue.QUANLYLUONGs.Remove(this);
					}
					this._NHANVIEN.Entity = value;
					if ((value != null))
					{
						value.QUANLYLUONGs.Add(this);
						this._MaNV = value.MaNV;
					}
					else
					{
						this._MaNV = default(string);
					}
					this.SendPropertyChanged("NHANVIEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
